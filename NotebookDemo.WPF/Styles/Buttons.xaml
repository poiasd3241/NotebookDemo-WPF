<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

	<Style x:Key="ImportantRegularToggleEffectButton"
		   TargetType="{x:Type ToggleButton}">

		<Setter Property="Padding"
				Value="2" />
		<Setter Property="Width"
				Value="70" />
		<Setter Property="FontWeight"
				Value="Regular" />
		<Setter Property="FontStyle"
				Value="Italic" />
		<Setter Property="FontSize"
				Value="14" />
		<Setter Property="Cursor"
				Value="Hand" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border x:Name="border"
							CornerRadius="2"
							Background="{TemplateBinding Background}"
							Padding="{TemplateBinding Padding}">
						<TextBlock x:Name="textBlock"
								   Focusable="False"
								   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								   VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
					</Border>

					<ControlTemplate.Triggers>

						<!-- Checked idle. -->
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsChecked"
										   Value="True" />
							</MultiTrigger.Conditions>
							<MultiTrigger.Setters>
								<Setter Property="Background"
										Value="{StaticResource AccentLightBrush}" />
								<Setter Property="Foreground"
										Value="{StaticResource AccentTextBrush }" />
								<Setter Property="Text"
										TargetName="textBlock"
										Value="important" />
							</MultiTrigger.Setters>
						</MultiTrigger>

						<!-- Unchecked idle. -->
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsChecked"
										   Value="False" />
							</MultiTrigger.Conditions>
							<MultiTrigger.Setters>
								<Setter Property="Background"
										Value="{StaticResource Black10Brush}" />
								<Setter Property="Foreground"
										Value="{StaticResource Black90Brush }" />
								<Setter Property="Text"
										TargetName="textBlock"
										Value="regular" />
							</MultiTrigger.Setters>
						</MultiTrigger>

					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="RegularButton"
		   TargetType="{x:Type Button}">

		<Setter Property="Focusable"
				Value="False" />
		<Setter Property="Cursor"
				Value="Hand" />
		<Setter Property="BorderBrush"
				Value="{StaticResource Black50Brush}" />
		<Setter Property="Foreground"
				Value="{StaticResource Black90Brush}" />
		<Setter Property="Background"
				Value="{StaticResource TransparentBrush}" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Background="{TemplateBinding Background}"
							Padding="{TemplateBinding Padding}">
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>

		<Style.Triggers>

			<!-- Hover. -->
			<Trigger Property="IsMouseOver"
					 Value="True">
				<Setter Property="Background"
						Value="{StaticResource Black10Brush}" />
			</Trigger>

			<!-- Pressed. -->
			<Trigger Property="IsPressed"
					 Value="True">
				<Setter Property="Background"
						Value="{StaticResource Black20Brush}" />
			</Trigger>

		</Style.Triggers>
	</Style>

	<Style x:Key="AccentButton"
		   TargetType="{x:Type Button}"
		   BasedOn="{StaticResource RegularButton}">

		<Setter Property="BorderBrush"
				Value="{StaticResource AccentText75Brush}" />
		<Setter Property="Foreground"
				Value="{StaticResource AccentTextBrush}" />
		<Setter Property="Background"
				Value="{StaticResource AccentLightBrush}" />

		<Style.Triggers>

			<!-- Hover. -->
			<Trigger Property="IsMouseOver"
					 Value="True">
				<Setter Property="Background"
						Value="{StaticResource AccentMediumBrush}" />
			</Trigger>

			<!-- Pressed. -->
			<Trigger Property="IsPressed"
					 Value="True">
				<Setter Property="Background"
						Value="{StaticResource AccentBoldBrush}" />
			</Trigger>

		</Style.Triggers>
	</Style>

	<Style x:Key="TextButton"
		   TargetType="{x:Type Button}"
		   BasedOn="{StaticResource RegularButton}">

		<Setter Property="BorderBrush"
				Value="{StaticResource TransparentBrush}" />

	</Style>

</ResourceDictionary>
